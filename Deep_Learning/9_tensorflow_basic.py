# -*- coding: utf-8 -*-
"""9_tensorflow_basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eyLN3dev_BxGRk0-oxFwv28y6ME6Qtju

# TensorFlow

딥러닝 '프레임워크'
- 딥러닝을 하기위한 구글에서 제공하는 툴(규칙)
- Tensor들을 레이어에 흘려보내서 계산을 한다. (행렬 곱, 다차원)
- 모델에 대한 계산그래프를 미리 그려 놓는다.

## Numpy VS TensorFlow
"""

import numpy as np
import tensorflow as tf

# 자료 타입에 상관없이 저장할 수 있는게 list / 단점이자 장점
basic_list_dim1 = [1, 2, 3]
basic_list_dim2 = [[1, 2, 3],
                   [4, 5, 6]]

"""기본적인 파이썬 리스트도 Tensor는 만들수 있다 하지만 속도면에서 굉장히 느리기 때문에 numpy 또는 tensorflow를 사용한다."""

# numpy나 tensorflow를 사용해서 array를 만든다.(숫자만, 2차원 이상이면 빈 값 안됨.)
arr = np.array(basic_list_dim1)
arr.shape

arr2 = np.array(basic_list_dim2)
arr2.shape

"""## TensorFlow Array"""

# tensorflow에서 배열을 만들 때 array -> constant함수를 사용한다.
# 파이썬의 리스트를 텐서플로우의 배열화
tf.constant(basic_list_dim1)

arr = np.array([1, 2, 3]) # numpy array
tf.constant(arr)

arr = np.array(basic_list_dim2)
tf.constant(arr)

tensor = tf.constant([1, 2, 3])
tensor

tensor.shape

"""# TensorFlow의 데이터 타입 정의
- dtype 확인 및 정의
"""

tensor.dtype

"""numpy에서 astype() -> 타입 변경

tensorflow에서는 tf.cast를 사용하면 된다.
"""

tf.cast(tensor, dtype=tf.float32)

tf.constant([1, 2, 3], dtype=tf.float32)

"""# Tensor를 numpy Array화
기본적으로 numpy를 참조하고있다.

tensor1 일때는 직접 변환을 해줬어야했다.
"""

tensor.numpy()

np.array(tensor)

type(tensor)

"""EagerTensor란?

텐서플로우 세션관리 하에있는 constant를 지칭.
"""

type(tensor.numpy())

"""# TensoeFlow에서 난수 생성하기"""

np.random.randn(2, 3)

# 정규분포 랜덤값 만들기
tf.random.normal([2, 3])

# 균등분포 만들기
tf.random.uniform((2, 3))