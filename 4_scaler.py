# -*- coding: utf-8 -*-
"""4_Scaler.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zslK0aHlR1-1moDv-UdatnzCRZSA6eB4
"""

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split

cancer = load_breast_cancer()

X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, random_state=1)

print(X_train.shape)
print(X_test.shape)

#  Scaler 는 변환기 이다.  (transfomer)
# Transfomer는 fit, transform  두개를 합친 fit_transform  메소드를 갖는다.

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()

# 훈련 셋을 MinMaxScaler에 적용한다.
# scaler.fit(X_train)

# 훈련  셋을  변환함.   
X_train_scaled = scaler.fit_transform(X_train)

# 스케일이 조정된 후 데이터셋의 속성을 출력합니다.
print("변환된 후 크기 : {}".format(X_train_scaled.shape))
print()
print("스케일 조정 전 특성별 최솟값\n {}".format(X_train.min(axis=0)))
print()
print("스케일 조정 전 특성별 최댓값\n {}".format(X_train.max(axis=0)))
print()
print("스케일 조정 후 특성별 최솟값\n {}".format(X_train_scaled.min(axis=0)))
print()
print("스케일 조정 후 특성별 최댓값\n {}".format(X_train_scaled.max(axis=0)))

# 훈련 셋도 했으니 테스트 셋도 스케일링한다.
X_test_scaled = scaler.transform(X_test)

# 스케일이 조정된 후 테스트 데이터의 속성을 출력합니다.
print("스케일 조정 후 특성별 최솟값 \n{}".format(X_test_scaled.min(axis=0)))
print()
print("스케일 조정 후 특성별 최댓값 \n{}".format(X_test_scaled.max(axis=0)))

# transform 메서드는 테스트 세트의 최솟값과 범위를 사용하지 않고, 
# 항상 훈련세트의 최솟값을 빼고 훈련 세트의 범위로 나눕니다. 
# 그래서 값이 음수거나 1을 넘을 수가 있다,  기준은 원본 데이터의 기준이기 때문.

